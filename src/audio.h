#ifndef AUDIO_H
#define AUDIO_H

#include "utils.h"

////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// API DECL //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

typedef struct {
    u32 placeholder;
} aud_init_arg_t;
typedef enum { aud_init_OK, aud_init_MAP_INVALID } aud_init_e;
static aud_init_e aud_init(aud_init_arg_t arg);

////////////////////////////////////////////////////////////////////////////////
///////////////////////////// INTERNAL IMPL ////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
////////////////////////////// API IMPL ////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"

struct state_aud_t {
    u32 placeholder;
    // pool_t
} static state_aud = {0}; // NOLINT

/*
 * Initialise the audio module. 
 *
 * @param args - initialisation arguments.
*/
static aud_init_e aud_init(aud_init_arg_t args)
{
    return (args.placeholder) ? aud_init_OK : aud_init_MAP_INVALID;
}

#pragma GCC diagnostic pop
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif // AUDIO_H
